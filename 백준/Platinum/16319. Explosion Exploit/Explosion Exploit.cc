#include <bits/stdc++.h>
using namespace std;

int N, M, D;
map<pair<int,int>,double> DP[101];

pair<int,int> state(vector<int> a, vector<int> b) {
    int aa=0,bb=0;
    for(int i=0;i<7;i++) aa=aa*6+a[i], bb=bb*6+b[i];
    return {aa,bb};
}

pair<vector<int>,vector<int>> restore(pair<int,int> st) {
    auto [a,b]=st;
    vector<int> aa,bb;
    for(int i=0;i<7;i++) {
        aa.push_back(a%6);
        a/=6;
        bb.push_back(b%6);
        b/=6;
    }
    reverse(aa.begin(),aa.end()), reverse(bb.begin(),bb.end());
    return {aa,bb};
}

int main() {
    cin.tie(0)->sync_with_stdio(0);
    cin >> N >> M >> D;
    vector<int> a(7), b(7);
    int sum=0;
    for(int i=1,x;i<=N;i++) cin >> x, a[x]++, sum+=x;
    for(int i=1,x;i<=M;i++) cin >> x, b[x]++, sum+=x;
    D=min(D, sum);

    DP[D][state(a,b)]=1;
    for(int d=D;d;d--) {
        for(auto [i,j]:DP[d]) {
            auto [aa,bb] = restore(i);
            int cnt = N+M-aa[0]-bb[0];
            
            // my
            for(int k=1;k<7;k++) if(aa[k]) {
                aa[k-1]++, aa[k]--;
                DP[d-1][state(aa,bb)] += j/cnt*(aa[k]+1);
                aa[k-1]--, aa[k]++;
            }

            // op
            for(int k=1;k<7;k++) if(bb[k]) {
                bb[k-1]++, bb[k]--;
                DP[d-1][state(aa,bb)] += j/cnt*(bb[k]+1);
                bb[k-1]--, bb[k]++;
            }
        }
    }

    double ans=0;
    for(auto [i,j]:DP[0]) {
        auto [aa,bb] = restore(i);
        if(bb[0]==M) ans+=j;
    }
    cout << fixed << setprecision(12) << ans;
    return 0;
}